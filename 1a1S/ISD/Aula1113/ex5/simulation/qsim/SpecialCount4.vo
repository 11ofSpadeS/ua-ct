// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 SJ Lite Edition"

// DATE "01/03/2023 12:49:04"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module SpecialCount4 (
	Q0,
	clk,
	init,
	Q1,
	Q2,
	Q3);
output 	Q0;
input 	clk;
input 	init;
output 	Q1;
output 	Q2;
output 	Q3;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Q0~output_o ;
wire \Q1~output_o ;
wire \Q2~output_o ;
wire \Q3~output_o ;
wire \clk~input_o ;
wire \init~input_o ;
wire \inst|sub|106~combout ;
wire \inst|sub|132~combout ;
wire \inst|sub|134~q ;
wire \inst4~0_combout ;
wire \inst|sub|110~combout ;
wire \inst|sub|111~q ;
wire \inst|sub|125~combout ;
wire \inst|sub|122~q ;
wire \inst|sub|71~combout ;
wire \inst|sub|34~q ;


cycloneive_io_obuf \Q0~output (
	.i(\inst|sub|34~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q0~output_o ),
	.obar());
// synopsys translate_off
defparam \Q0~output .bus_hold = "false";
defparam \Q0~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Q1~output (
	.i(\inst|sub|111~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q1~output_o ),
	.obar());
// synopsys translate_off
defparam \Q1~output .bus_hold = "false";
defparam \Q1~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Q2~output (
	.i(\inst|sub|122~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q2~output_o ),
	.obar());
// synopsys translate_off
defparam \Q2~output .bus_hold = "false";
defparam \Q2~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Q3~output (
	.i(\inst|sub|134~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q3~output_o ),
	.obar());
// synopsys translate_off
defparam \Q3~output .bus_hold = "false";
defparam \Q3~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \init~input (
	.i(init),
	.ibar(gnd),
	.o(\init~input_o ));
// synopsys translate_off
defparam \init~input .bus_hold = "false";
defparam \init~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst|sub|106 (
// Equation(s):
// \inst|sub|106~combout  = (\inst|sub|34~q  & \inst|sub|111~q )

	.dataa(\inst|sub|34~q ),
	.datab(\inst|sub|111~q ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst|sub|106~combout ),
	.cout());
// synopsys translate_off
defparam \inst|sub|106 .lut_mask = 16'h8888;
defparam \inst|sub|106 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst|sub|132 (
// Equation(s):
// \inst|sub|132~combout  = (\init~input_o  & ((\inst|sub|122~q  & (!\inst|sub|134~q  & \inst|sub|106~combout )) # (!\inst|sub|122~q  & (\inst|sub|134~q ))))

	.dataa(\init~input_o ),
	.datab(\inst|sub|122~q ),
	.datac(\inst|sub|134~q ),
	.datad(\inst|sub|106~combout ),
	.cin(gnd),
	.combout(\inst|sub|132~combout ),
	.cout());
// synopsys translate_off
defparam \inst|sub|132 .lut_mask = 16'h2820;
defparam \inst|sub|132 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \inst|sub|134 (
	.clk(\clk~input_o ),
	.d(\inst|sub|132~combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst|sub|134~q ),
	.prn(vcc));
// synopsys translate_off
defparam \inst|sub|134 .is_wysiwyg = "true";
defparam \inst|sub|134 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \inst4~0 (
// Equation(s):
// \inst4~0_combout  = (\init~input_o  & ((!\inst|sub|134~q ) # (!\inst|sub|122~q )))

	.dataa(\init~input_o ),
	.datab(gnd),
	.datac(\inst|sub|122~q ),
	.datad(\inst|sub|134~q ),
	.cin(gnd),
	.combout(\inst4~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst4~0 .lut_mask = 16'h0AAA;
defparam \inst4~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst|sub|110 (
// Equation(s):
// \inst|sub|110~combout  = (\inst4~0_combout  & (\inst|sub|34~q  $ (\inst|sub|111~q )))

	.dataa(\inst4~0_combout ),
	.datab(gnd),
	.datac(\inst|sub|34~q ),
	.datad(\inst|sub|111~q ),
	.cin(gnd),
	.combout(\inst|sub|110~combout ),
	.cout());
// synopsys translate_off
defparam \inst|sub|110 .lut_mask = 16'h0AA0;
defparam \inst|sub|110 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \inst|sub|111 (
	.clk(\clk~input_o ),
	.d(\inst|sub|110~combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst|sub|111~q ),
	.prn(vcc));
// synopsys translate_off
defparam \inst|sub|111 .is_wysiwyg = "true";
defparam \inst|sub|111 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \inst|sub|125 (
// Equation(s):
// \inst|sub|125~combout  = (\inst|sub|122~q  $ (((\inst|sub|34~q  & \inst|sub|111~q )))) # (!\inst4~0_combout )

	.dataa(\inst|sub|34~q ),
	.datab(\inst|sub|111~q ),
	.datac(\inst|sub|122~q ),
	.datad(\inst4~0_combout ),
	.cin(gnd),
	.combout(\inst|sub|125~combout ),
	.cout());
// synopsys translate_off
defparam \inst|sub|125 .lut_mask = 16'h78FF;
defparam \inst|sub|125 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \inst|sub|122 (
	.clk(\clk~input_o ),
	.d(\inst|sub|125~combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst|sub|122~q ),
	.prn(vcc));
// synopsys translate_off
defparam \inst|sub|122 .is_wysiwyg = "true";
defparam \inst|sub|122 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \inst|sub|71 (
// Equation(s):
// \inst|sub|71~combout  = (\init~input_o  & (!\inst|sub|34~q  & ((!\inst|sub|134~q ) # (!\inst|sub|122~q ))))

	.dataa(\init~input_o ),
	.datab(\inst|sub|122~q ),
	.datac(\inst|sub|134~q ),
	.datad(\inst|sub|34~q ),
	.cin(gnd),
	.combout(\inst|sub|71~combout ),
	.cout());
// synopsys translate_off
defparam \inst|sub|71 .lut_mask = 16'h002A;
defparam \inst|sub|71 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \inst|sub|34 (
	.clk(\clk~input_o ),
	.d(\inst|sub|71~combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst|sub|34~q ),
	.prn(vcc));
// synopsys translate_off
defparam \inst|sub|34 .is_wysiwyg = "true";
defparam \inst|sub|34 .power_up = "low";
// synopsys translate_on

assign Q0 = \Q0~output_o ;

assign Q1 = \Q1~output_o ;

assign Q2 = \Q2~output_o ;

assign Q3 = \Q3~output_o ;

endmodule
