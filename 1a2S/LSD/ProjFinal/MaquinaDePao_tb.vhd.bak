library ieee;
use ieee.std_logic_1164.all;

entity MaquinaDePao_tb is
end MaquinaDePao_tb;

architecture Behavioral of MaquinaDePao_tb is

	component MaquinaDePao is
		port(reset				: in  std_logic;
			  clk					: in  std_logic;
			  clken				: in std_logic;
			  start_stop		: in  std_logic;
			  timeExp			: in  std_logic;
			  time_amassar		: in 	std_logic_vector(7 downto 0);
			  time_levedura	: in 	std_logic_vector(7 downto 0);
			  time_cozedura	: in 	std_logic_vector(7 downto 0);
			  time_extra		: in 	std_logic_vector(7 downto 0);
			  time_total		: in  std_logic_vector(7 downto 0);
			  

			  newTime			: out std_logic;
			  timeVal			: out std_logic_vector(7 downto 0);
			  ledr0				: out std_logic;
			  ledg0				: out std_logic;
			  ledg1				: out std_logic;
			  ledg2				: out std_logic);
	end component;

	signal reset				: std_logic := '0';
	signal clk					: std_logic := '0';
	signal clken				: std_logic := '0';
	signal start_stop		: std_logic := '0';
	signal timeExp			: std_logic := '0';
	signal time_amassar		: std_logic_vector(7 downto 0) := (others => '0');
	signal time_levedura	: std_logic_vector(7 downto 0) := (others => '0');
	signal time_cozedura	: std_logic_vector(7 downto 0) := (others => '0');
	signal time_extra		: std_logic_vector(7 downto 0) := (others => '0');
	signal time_total		: std_logic_vector(7 downto 0) := (others => '0');

	signal newTime			: std_logic;
	signal timeVal			: std_logic_vector(7 downto 0);
	signal ledr0				: std_logic;
	signal ledg0				: std_logic;
	signal ledg1				: std_logic;
	signal ledg2				: std_logic;

begin

	uut: MaquinaDePao port map(reset, clk, clken, start_stop, timeExp,
							  time_amassar, time_levedura, time_cozedura, time_extra, time_total,
							  newTime, timeVal, ledr0, ledg0, ledg1, ledg2);

	
	clk_process: process
	begin
		clk <= '0';
		wait for 500 ns; 	--1 ciclo do clock equivale a 1/2 segundos
		clk <= '1';
		wait for 500 ns; 
	end process;


	reset_process: process
	begin
		reset <= '1';
		wait for 10 ns;
		reset <= '0';
		wait;
	end process;


	stimulus_process: process
	begin
		wait for 5 ns;
		start_stop <= '1';
		wait for 100 ns;
		start_stop <= '0';
		wait for 2000 ns; -- 4 ciclos de relogio
		timeExp <= '1'; 
		wait for 10 ns;
		timeExp <= '0';
		wait for 2000 ns;
		wait;
	end process;

end Behavioral;